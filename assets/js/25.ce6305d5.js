(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{479:function(e,t,s){e.exports=s.p+"assets/img/become-requester.f6d814af.png"},566:function(e,t,s){"use strict";s.r(t);var r=s(8),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"frontmatter-title"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),r("TocHeader"),e._v(" "),r("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,3]}}),e._v(" "),r("p",[e._v("Become a "),r("em",[e._v("requester")]),e._v(" to consume the off-chain API data that an Airnode provides. A "),r("em",[e._v("requester")]),e._v(" is an entity (individual, business, etc.) whose contracts make requests to Airnodes. These contracts are called clients. A "),r("em",[e._v("requester")]),e._v(" should not be confused with an "),r("em",[e._v("end user")]),e._v(" who is someone that uses a requester's client contracts, usually as part of a dApp.")]),e._v(" "),r("p",[e._v("Setting up a requester record is needed to allow client contracts access to one or more Airnodes. A requester record is used to endorse client contracts and fund Airnodes.")]),e._v(" "),r("p",[e._v("The following diagram illustrates how to become a requester.")]),e._v(" "),r("p",[r("img",{attrs:{src:s(479),alt:"become-requester"}})]),e._v(" "),r("p",[e._v("There are several requester related commands in the "),r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#create-requester"}},[e._v("@api3/airnode-admin")]),e._v(" package. Here we will use three commands to create a requester record, endorse client contracts and fund Airnodes.")],1),e._v(" "),r("ol",[r("li",[e._v("Create a Requester Record:"),r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#create-requester"}},[r("code",[e._v("create-requester")])]),e._v("creates a requester record.")],1),e._v(" "),r("li",[e._v("Endorse Client Contracts:"),r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#endorse-client"}},[r("code",[e._v("endorse-client")])]),e._v("endorses a client contract.")],1),e._v(" "),r("li",[e._v("Fund Airnodes:"),r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#derive-designated-wallet"}},[r("code",[e._v("derive-designated-wallet")])]),e._v("creates a requester specific wallet associated with an Airnode.")],1)]),e._v(" "),r("h2",{attrs:{id:"part-1-create-a-requester-record"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#part-1-create-a-requester-record"}},[e._v("#")]),e._v(" Part 1: Create a Requester Record")]),e._v(" "),r("p",[e._v("Each requester needs to create a requester record and get assigned a requester index. To create a new requester record you will need the following.")]),e._v(" "),r("ul",[r("li",[e._v("A blockchain providerURL such as the URL with your Infura providerID on the Ropsten network.")]),e._v(" "),r("li",[e._v("A mnemonic for gas to fund the record creation.")]),e._v(" "),r("li",[e._v("An address that will be used to administer the requester record in the future, keep it secret.")])]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("mnemonic")]),e._v(" "),r("p",[e._v("Use this wallet for maintenance costs at API3 keeping a minimal amount of eth in it. This wallet pays the transaction gas costs to write the requester record and client contract endorsements. This is not the wallet(s) that will pay gas costs to actually execute any Airnodes, for that the Airnodes themselves will create designated wallets on behalf of your requester record. "),r("RouterLink",{attrs:{to:"/next/grp-requesters/become-a-requester.html#part-3-funding-airnodes"}},[e._v("Part 3")]),e._v(" will explain more about designated wallets.")],1)]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#create-requester"}},[e._v("@api3/airnode-admin create-requester")])],1),e._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("npx @api3/airnode-admin create-requester "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --providerUrl https://ropsten.infura.io/v3/"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("KEY"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --mnemonic "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"cricket oppose ..."')]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Used to pay the gas costs for this transaction.")]),e._v("\n  --requesterAdmin 0xaBd9daAdf"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".   "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# A secret admin address.")]),e._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Returns")]),e._v("\n  Created requester with index "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v(" \n  and admin address 0xaBd9daAdf"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br")])]),r("h2",{attrs:{id:"part-2-endorse-client-contracts"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#part-2-endorse-client-contracts"}},[e._v("#")]),e._v(" Part 2: Endorse Client Contracts")]),e._v(" "),r("p",[e._v("A requester endorses a client contract allowing it make Airnode requests on behave of the requester. Your client contract should already be deployed.")]),e._v(" "),r("p",[e._v("Endorsing a client contract means it can make Airnode requests, paid for by the designated wallet associated with the Airnode and the requesterIndex of your requester record. "),r("RouterLink",{attrs:{to:"/next/grp-requesters/become-a-requester.html#part-3-funding-airnodes"}},[e._v("Part 3")]),e._v(" will explain more about designated wallets.")],1),e._v(" "),r("p",[e._v("To endorse a client contract you will need the following.")]),e._v(" "),r("ul",[r("li",[e._v("A blockchain providerURL such as the URL with your Infura providerID on the Ropsten network.")]),e._v(" "),r("li",[e._v("A mnemonic for gas to fund the endorsement.")]),e._v(" "),r("li",[e._v("The requesterIndex returned from the call to create-requester. (Part #1 above)")]),e._v(" "),r("li",[e._v("The public address of the client contract.")])]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#endorse-client"}},[e._v("@api3/airnode-admin endorse-client")])],1),e._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("npx @api3/airnode-admin endorse-client "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --providerUrl https://ropsten.infura.io/v3/"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("KEY"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --mnemonic "),r("span",{pre:!0,attrs:{class:"token string"}},[e._v('"nature about salad..."')]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Used to pay the gas costs for this transaction.")]),e._v("\n  --requesterIndex "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("                 "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The requesterIndex of the requester record.")]),e._v("\n  --clientAddress 0x2c2e12"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".          "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The public address of the contract to endorse.")]),e._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Returns")]),e._v("\n  Endorsed 0x2c2e12"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(". \n  by requester with index "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br")])]),r("h2",{attrs:{id:"part-3-funding-airnodes"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#part-3-funding-airnodes"}},[e._v("#")]),e._v(" Part 3: Funding Airnodes")]),e._v(" "),r("p",[e._v("To fund a particular Airnode, a requester instructs the Airnode to derive a "),r("em",[e._v("designated wallet")]),e._v(" for the requester  using the Airnode's ID and the requester's requesterIndex. Once the wallet is created it must be funded using the public address returned by the command"),r("code",[e._v("derive-designated-wallet")]),e._v(". Each Airnode keeps a list of requester designated wallets that can access the Airnode. Learn more about "),r("RouterLink",{attrs:{to:"/next/technology/protocols/request-response/designated-wallet.html"}},[e._v("designated wallets")]),e._v(".")],1),e._v(" "),r("p",[e._v("Client contracts endorsed by a requester will have access to all Airnodes the requester has funded. This allows the requester to cover the gas cost when accessing an Airnode. However this does not cover the cost of API data that the Airnode serves, see "),r("RouterLink",{attrs:{to:"/next/grp-requesters/fees.html#api-provider-fees"}},[e._v("API Provider Fees")]),e._v(". Requesters need to keep their designated wallets topped off if they want the Airnodes to fulfill requests made by their endorsed client contracts.")],1),e._v(" "),r("p",[e._v("Since the designated wallet is recorded in the cloud provider (i.g., AWS) where Airnode functions live, there are no on-chain transaction gas costs when deriving a designated wallet.")]),e._v(" "),r("div",{staticClass:"custom-block tip"},[r("p",{staticClass:"custom-block-title"},[e._v("Custodial Wallet")]),e._v(" "),r("p",[e._v("The requester should keep in mind that a designated wallet is custodial, i.e., the Airnode keeps the private key, and the funds are trusted with the Airnode. Therefore, a requester should not fund a designated wallet with more then they can trust the Airnode with. Learn more about custodial designated wallets in "),r("RouterLink",{attrs:{to:"/next/grp-requesters/fees.html#airnode-execution-fees"}},[e._v("Fees")]),e._v(".")],1)]),e._v(" "),r("p",[e._v("To fund an Airnode simply tell any Airnode to derive a "),r("em",[e._v("designated wallet")]),e._v(" for your requesterIndex. This will return the public address of the wallet so you can fund it.")]),e._v(" "),r("ul",[r("li",[e._v("A blockchain providerURL such as the URL with your Infura providerID on the Ropsten network.")]),e._v(" "),r("li",[e._v("The desired Airnode's ID, airnodeId.")]),e._v(" "),r("li",[e._v("The requester's requesterIndex that was generated when creating a requester record.")])]),e._v(" "),r("p",[r("RouterLink",{attrs:{to:"/next/technology/cli-commands.html#derive-designated-wallet"}},[e._v("@api3/airnode-admin derive-designated-wallet")])],1),e._v(" "),r("div",{staticClass:"language-bash line-numbers-mode"},[r("pre",{pre:!0,attrs:{class:"language-bash"}},[r("code",[e._v("npx @api3/airnode-admin derive-designated-wallet "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --providerUrl https://ropsten.infura.io/v3/"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("KEY"),r("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --airnodeId 0xe1e0dd"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(". "),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v(" "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The ID of the Airnode the requester wants access to.")]),e._v("\n  --requesterIndex "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v("        "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The requesterIndex identifies the requester record.")]),e._v("\n\n  "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Returns")]),e._v("\n  Derived the address of the wallet designated "),r("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("for")]),e._v(" requester with index "),r("span",{pre:!0,attrs:{class:"token number"}},[e._v("6")]),e._v(" \n  by Airnode with ID 0xaebd88bf458dfc4899d"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(". \n  to be 0xa5C073E31fAb1F8acf"),r("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(". "),r("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Here is the wallet's public address.")]),e._v("\n")])]),e._v(" "),r("div",{staticClass:"line-numbers-wrapper"},[r("span",{staticClass:"line-number"},[e._v("1")]),r("br"),r("span",{staticClass:"line-number"},[e._v("2")]),r("br"),r("span",{staticClass:"line-number"},[e._v("3")]),r("br"),r("span",{staticClass:"line-number"},[e._v("4")]),r("br"),r("span",{staticClass:"line-number"},[e._v("5")]),r("br"),r("span",{staticClass:"line-number"},[e._v("6")]),r("br"),r("span",{staticClass:"line-number"},[e._v("7")]),r("br"),r("span",{staticClass:"line-number"},[e._v("8")]),r("br"),r("span",{staticClass:"line-number"},[e._v("9")]),r("br")])]),r("h2",{attrs:{id:"record-keeping"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#record-keeping"}},[e._v("#")]),e._v(" Record Keeping")]),e._v(" "),r("p",[e._v("During and after creating/managing your requester record there are some items you should write down for future use.")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Item")]),e._v(" "),r("th",[e._v("Description")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[e._v("Maintenance wallet (mnemonic)")]),e._v(" "),r("td",[e._v("A minimally funded mnemonic used to change your requester record, client contract endorsements, etc. in the future.")])]),e._v(" "),r("tr",[r("td",[e._v("requesterIndex")]),e._v(" "),r("td",[e._v("* An identifer (number) you received when creating a requester record.")])]),e._v(" "),r("tr",[r("td",[e._v("requesterAdmin")]),e._v(" "),r("td",[e._v("An address you created when creating a requester record.")])]),e._v(" "),r("tr",[r("td",[e._v("Airnode designated wallets")]),e._v(" "),r("td",[e._v("** For each Airnode you have funded a custodial designated wallet was created. The Airnode keeps the private key and returns you the public address which you use to add funds.")])])])]),e._v(" "),r("p",[e._v("* Do not loose your requesterIndex, it cannot be recovered.")]),e._v(" "),r("p",[e._v("** You can acquire the public address later should you forget it by running the command"),r("code",[e._v("derive-designated-wallet")]),e._v("again. Since the designated wallet was already created for the requesterIndex/airnodeId pair, the command will only return the known public address for the wallet.")])],1)}),[],!1,null,null,null);t.default=a.exports}}]);