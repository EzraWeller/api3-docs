(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{581:function(e,t,n){"use strict";n.r(t);var r=n(8),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"frontmatter-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),n("p",[e._v("The "),n("code",[e._v("secrets.env")]),e._v(" file is bundled with a "),n("RouterLink",{attrs:{to:"/next/technology/deployment-files/config-json.html"}},[n("code",[e._v("config.json")])]),e._v(" file and contains the secrets that the respective Airnode deployments will need.\nAll variables defined in a "),n("code",[e._v("secrets.env")]),e._v(" file will be set as the environment variables of all deployments specified in the "),n("code",[e._v("config.json")]),e._v(" file.")],1),e._v(" "),n("p",[n("strong",[e._v("There are four categories of secrets.")])]),e._v(" "),n("table",[n("thead",[n("tr",[n("th"),e._v(" "),n("th")])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("AWS_ACCESS_KEY_ID - AWS_SECRET_KEY")]),e._v(" "),n("td",[e._v("AWS account credentials")])]),e._v(" "),n("tr",[n("td",[e._v("MASTER_KEY_MNEMONIC")]),e._v(" "),n("td",[e._v("The wallet MNEMONIC that will be used by the Airnode")])]),e._v(" "),n("tr",[n("td",[e._v("CP_${chainType}_${chainId}_${name}")]),e._v(" "),n("td",[e._v("blockchain provider urls")])]),e._v(" "),n("tr",[n("td",[e._v("SS_${oisTitle}_${name}")]),e._v(" "),n("td",[e._v("securitySchemes")])])])]),e._v(" "),n("p",[e._v("The wallet mnemonic and AWS credentials are known values you can add directly to secrets.env.")]),e._v(" "),n("p",[e._v("The last two categories above (CP_ and  SS_) are environment variable names that are declared in the "),n("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/configuring-airnode.html#chainproviders"}},[n("code",[e._v("environment.chainProviders")])]),e._v(" or "),n("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/configuring-airnode.html#securityschemes"}},[n("code",[e._v("environment.securitySchemes")])]),e._v(" objects from the config.json file. Use the values of the fields "),n("code",[e._v("envName")]),e._v(" for the environment variable names.")],1),e._v(" "),n("blockquote",[n("p",[e._v("The  (CP_, SS_) environment variable names have formatting requirements. Correct them here and in the "),n("code",[e._v("environment")]),e._v(" object if needed. Replace any unsupported characters (whitespace, dash, etc.) with underscores. All characters are uppercase. Supported characters; (A-Z, 0-9, _). While not required consider using the following naming conventions for better readability in logs.")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("CP_${chainType}_${chainId}_${name}")])]),e._v(" "),n("li",[n("code",[e._v("SS_${oisTitle}_${name}")])])])]),e._v(" "),n("p",[e._v("Below is an example of "),n("code",[e._v("secrets.env")]),e._v(".")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('AWS_ACCESS_KEY_ID="JSDYNDRUA1XAF2W3UGPA"\nAWS_SECRET_KEY="q4JiOfPP4wQOuRj01/6/7RAodTAg6lFb99IoB4XH"\nMASTER_KEY_MNEMONIC="achieve climb couple wait accident symbol spy blouse reduce foil echo label"\nSS_MYOISTITLE_MY_SECURITY_SCHEME="FRACZKMH4F32BZ8X5uTd"\nCP_EVM_1_MAINNET_INFURA_="https://mainnet.infura.io/v3/5122f3ff104f30f21412aa38fd143d53"\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);