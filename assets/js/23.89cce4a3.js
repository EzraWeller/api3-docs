(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{477:function(e,t,s){e.exports=s.p+"assets/img/api-integration-ois.d00c3f83.png"},545:function(e,t,s){"use strict";s.r(t);var a=s(8),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"frontmatter-title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#frontmatter-title"}},[e._v("#")]),e._v(" "+e._s(e.$frontmatter.title))]),e._v(" "),a("TocHeader"),e._v(" "),a("TOC",{staticClass:"table-of-contents",attrs:{"include-level":[2,4]}}),e._v(" "),a("p",[e._v("A successful integration of an API with an Airnode requires the mapping of each other's interface. This is accomplished using an OIS ("),a("RouterLink",{attrs:{to:"/next/technology/specifications/ois.html"}},[e._v("Oracle Integration Specifications")]),e._v(") json object, found in the config.json file, that is designed to follow three basic steps.")],1),e._v(" "),a("ul",[a("li",[e._v("API operations are specified")]),e._v(" "),a("li",[e._v("Airnode endpoints are specified")]),e._v(" "),a("li",[e._v("Airnode endpoints are mapped to API operations")])]),e._v(" "),a("blockquote",[a("p",[a("img",{attrs:{src:s(477),alt:"api-integration-ois"}})])]),e._v(" "),a("p",[e._v("OIS is a mapping of API operations, such as  "),a("code",[e._v("GET /token/{id}")]),e._v(", to Airnode endpoints. When a client contract calls an AirnodeRRP contract request function, such as "),a("code",[e._v("makeRequest(..., callData)")]),e._v(", the callData is communicated to the off-chain Airnode which uses OIS mappings to translate the callData into a valid HTTP request for the appropriate API operation.")]),e._v(" "),a("p",[e._v("Therefore, only thing needed to integrate an API to Airnode is to create an OIS json object which lives in an Airnode's config.json file. This guide is an instructive approach to creating an OIS. As a point of reference, refer to "),a("RouterLink",{attrs:{to:"/next/technology/specifications/ois.html"}},[e._v("Oracle Integration Specifications (OIS)")]),e._v(" in the Technology section of these docs for additional input and understanding. It may be useful, but not necessary, to reference the "),a("a",{attrs:{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md",target:"_blank",rel:"noopener noreferrer"}},[e._v("OAS 3.0.3 docs"),a("OutboundLink")],1),e._v(" about fields related to API specifications.")],1),e._v(" "),a("details",{staticClass:"collapse-box"},[a("summary",{staticClass:"collapse-box-summary"},[e._v("\n  Other tips while this guide.\n  ")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Refer to the "),a("RouterLink",{attrs:{to:"/next/technology/specifications/ois.html"}},[e._v("Oracle Integration Specifications (OIS)")]),e._v(" reference while using this guide.")],1)]),e._v(" "),a("li",[a("p",[e._v("Open the "),a("a",{attrs:{href:"https://docs.api3.org/next/grp-providers/guides/templates/ois-json.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("OIS template"),a("OutboundLink")],1),e._v(" in another browser window to follow along.")])]),e._v(" "),a("li",[a("p",[e._v("View an example of an "),a("RouterLink",{attrs:{to:"/next/grp-providers/tutorials/config-examples/config-example-json.html"}},[e._v("Airnode config.json file")]),e._v(" from the Airnode Starter tutorial.")],1)])])]),e._v(" "),a("h2",{attrs:{id:"ois-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ois-template"}},[e._v("#")]),e._v(" OIS Template")]),e._v(" "),a("p",[e._v("An "),a("em",[e._v("OIS")]),e._v(" is a json object that is added to an Airnode's "),a("RouterLink",{attrs:{to:"/next/technology/templates/config-json.html"}},[e._v("config.json")]),e._v(" file as the ("),a("code",[e._v("ois")]),e._v(") "),a("em",[e._v("key")]),e._v(", sometimes called a "),a("em",[e._v("field")]),e._v(". Try using the "),a("RouterLink",{attrs:{to:"/next/technology/templates/ois-json.html"}},[e._v("OIS template")]),e._v(" to construct an OIS and add it to the Airnode's config.json file later.")],1),e._v(" "),a("p",[e._v("In the OIS template, there are some fields that contain "),a("code",[e._v("{FILL_*}")]),e._v(". This means that the value added is independent from other fields. On the other hand, if two fields contain the same expression  (e.g., "),a("code",[e._v("{FILL_OPERATION_PARAMETER_1_NAME}")]),e._v("), you must use the same value in them, because they are referencing each other.")]),e._v(" "),a("p",[e._v("OIS uses a simplified version of the "),a("a",{attrs:{href:"https://github.com/OAI/OpenAPI-Specification",target:"_blank",rel:"noopener noreferrer"}},[e._v("OpenAPI Specification (OAS)"),a("OutboundLink")],1),e._v(". This means that if you have the OpenAPI/Swagger specifications of the API that you are going to integrate, you are about 80% done, because you can copy paste entire sections (but make sure that you make the necessary modifications to conform to the OIS format). Currently there is no tool that converts OAS to OIS automatically. If you would like to help build this, please join the conversation in "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/issues/152",target:"_blank",rel:"noopener noreferrer"}},[e._v("this issue"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("This guide will assume you do not have the OpenAPI specifications of the API that you will be integrating.")]),e._v(" "),a("h2",{attrs:{id:"step-1-specify-ois-definitions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-1-specify-ois-definitions"}},[e._v("#")]),e._v(" Step 1: Specify OIS Definitions")]),e._v(" "),a("p",[e._v("Start building an OIS by adding three descriptive fields to the root of the OIS json object.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"oisFormat"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"1.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"title"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"myOisTitle"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"version"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"0.1.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"oisformat"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oisformat"}},[e._v("#")]),e._v(" oisFormat")]),e._v(" "),a("p",[e._v("Leave this as "),a("code",[e._v("1.0.0")]),e._v(", which is the current OIS format version.")]),e._v(" "),a("h3",{attrs:{id:"title"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#title"}},[e._v("#")]),e._v(" title")]),e._v(" "),a("p",[e._v("This is a unique title of the OIS. Note that an Airnode can be configured with more than one OIS and uses the title as the OIS identifier.")]),e._v(" "),a("h3",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" version")]),e._v(" "),a("p",[e._v("This is the version of the OIS which allows for version-control of the OIS integration. It is recommended to use "),a("a",{attrs:{href:"https://semver.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("semver"),a("OutboundLink")],1),e._v(" versioning. The initial version could be <"),a("code",[e._v("0.1.0")]),e._v(">.")]),e._v(" "),a("h2",{attrs:{id:"step-2-specifying-the-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-2-specifying-the-api"}},[e._v("#")]),e._v(" Step 2: Specifying the API")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("apiSpecifications")]),e._v(" field is used to describe the API and its operations.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiSpecifications"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"servers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"components"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"security"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("..."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"servers"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#servers"}},[e._v("#")]),e._v(" Servers")]),e._v(" "),a("p",[e._v("The first step of specifying your API is to enter its "),a("em",[e._v("baseURL")]),e._v(" in the "),a("code",[e._v("apiSpecifications.servers[0].url")]),e._v(" field. Only one object (i.e., url) is allowed in the "),a("code",[e._v("apiSpecifications.servers")]),e._v(" array. A warning is raised during conversion if servers has multiple elements. This baseURL will apply to all operations.")]),e._v(" "),a("h4",{attrs:{id:"choosing-a-base-url"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#choosing-a-base-url"}},[e._v("#")]),e._v(" Choosing a Base URL")]),e._v(" "),a("p",[e._v("Consider the following full URL to execute an API operation that returns all know tokens.")]),e._v(" "),a("blockquote",[a("p",[e._v("https://www.myapi.com/v1/tokens")])]),e._v(" "),a("p",[e._v("There are two ways to segment this.")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("baseURL:")]),e._v(" https://www.myapi.com")]),e._v(" "),a("p",[a("strong",[e._v("path:")]),e._v("     /v1/data")])]),e._v(" "),a("p",[e._v("or")]),e._v(" "),a("blockquote",[a("p",[a("strong",[e._v("baseURL")]),e._v(": https://www.myapi.com/v1")]),e._v(" "),a("p",[a("strong",[e._v("path:")]),e._v(" /data")])]),e._v(" "),a("p",[e._v("Because the call will be made to <"),a("code",[e._v("baseURL+path")]),e._v("> both will result in the same full URL.")]),e._v(" "),a("p",[e._v("Set the baseURL as the section of the full URL that you expect to be shared by all operations. From the examples above it is recommended to use "),a("code",[e._v("https://www.myapi.com")]),e._v(", in case additional paths starting with "),a("code",[e._v("/v2")]),e._v(" get added to the API in the future. As you can tell, API integration requires many subjective choices, and is more art than science.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"apiSpecifications"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"servers"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Only one element is allowed in the servers array.")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"url"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://www.myapi.com"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  ...\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br")])]),a("h3",{attrs:{id:"paths"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#paths"}},[e._v("#")]),e._v(" Paths")]),e._v(" "),a("p",[e._v("The "),a("em",[e._v("paths")]),e._v(" field defines all the API operations much like an OpenAPI Specification file.")]),e._v(" "),a("p",[a("em",[e._v("What is an API operation?")])]),e._v(" "),a("blockquote",[a("p",[e._v("An API operation is specified as a unique combination of a "),a("em",[a("strong",[e._v("path")])]),e._v(" and an HTTP "),a("em",[a("strong",[e._v("method")])]),e._v(". "),a("code",[e._v("GET /token/{id}")])])]),e._v(" "),a("h4",{attrs:{id:"operations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#operations"}},[e._v("#")]),e._v(" Operations")]),e._v(" "),a("p",[e._v("In the examples below, "),a("code",[e._v("GET")]),e._v(" refers to an "),a("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods",target:"_blank",rel:"noopener noreferrer"}},[e._v("HTTP request method"),a("OutboundLink")],1),e._v(". This implies that we could have another API operation that can be specified using a different method but the same path.")]),e._v(" "),a("blockquote",[a("p",[e._v("path:     /data")]),e._v(" "),a("p",[e._v("method:   GET")])]),e._v(" "),a("blockquote",[a("p",[e._v("path:     /data")]),e._v(" "),a("p",[e._v("method:   POST")])]),e._v(" "),a("p",[e._v("Therefore, a path is not enough to specify an API operation by itself, we must also provide a method. If a new path is needed then it must start a new object in paths with its own methods. Currently only the GET and POST methods are supported by Airnode.")]),e._v(" "),a("p",[e._v("With regards to the "),a("RouterLink",{attrs:{to:"/next/technology/templates/ois-json.html"}},[e._v("OIS template")]),e._v(", the name of the element (denoted as "),a("code",[e._v("{FILL_PATH}")]),e._v(") should be replaced with the path (e.g., "),a("code",[e._v("/data")]),e._v("). Similarly, "),a("code",[e._v("{FILL_METHOD}")]),e._v(" should be replaced with the method of the operation you want to integrate (e.g., "),a("code",[e._v("get")]),e._v("). The method must be lowercase.")],1),e._v(" "),a("p",[e._v("The following example illustrates three operations, "),a("code",[e._v("GET /data")]),e._v(", "),a("code",[e._v("POST /data")]),e._v(", "),a("code",[e._v("GET /tokens")]),e._v(".")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"/data"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// path    {FILL_PATH}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"get"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// method  {FILL_METHOD}")]),e._v("\n      ...      "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parameters")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"post"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// method  {FILL_METHOD}")]),e._v("\n      ...      "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parameters")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"/tokens"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// path    {FILL_PATH}")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"get"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// method  {FILL_METHOD}")]),e._v("\n      ...      "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// parameters")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br")])]),a("h4",{attrs:{id:"parameters-operation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters-operation"}},[e._v("#")]),e._v(" Parameters (operation)")]),e._v(" "),a("p",[e._v("After specifying the path and method of an API operation, the final step is to specify its parameters.\nEach parameter is an object in the "),a("code",[e._v("apiSpecifications.paths.{PATH}.{METHOD}.parameters")]),e._v(" array, with the fields "),a("code",[e._v("in")]),e._v(" and "),a("code",[e._v("name")]),e._v(".\n"),a("code",[e._v("in")]),e._v(" tells where the parameter goes in the HTTP request, and "),a("code",[e._v("name")]),e._v(" tells the name that the parameter value will be sent under.")]),e._v(" "),a("p",[e._v("It is not necessary to specify all API operation parameters, but only the ones the on-chain requester will need to be able to provide (see Airnode endpoint "),a("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/api-integration.html#parameters"}},[e._v("parameters")]),e._v("), and the ones that you want to hard-code a value for (see Airnode endpoint "),a("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/api-integration.html#fixedoperationparameters"}},[e._v("fixed operation parameters")]),e._v(").")],1),e._v(" "),a("p",[e._v("Currently Airnode supports the following parameter types. For POST methods use the type "),a("code",[e._v("query")]),e._v(" for requestBody parameters, Airnode will convert all "),a("code",[e._v("query")]),e._v(" types to "),a("code",[e._v("requestBody")]),e._v(" when calling the API operation.")]),e._v(" "),a("blockquote",[a("p",[e._v("path, query, header, cookie")])]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"paths"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"/data/{id}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   \n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"get"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"parameters"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"path"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"id"')]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"header"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n          "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Accept"')]),e._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br")])]),a("p",[a("em",[e._v("Example: Get a token")])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("GET /token/{id}")]),e._v(" returns a token using the token's "),a("code",[e._v("id")]),e._v(" which is a "),a("code",[e._v("path")]),e._v(" parameter.")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Method")]),e._v(" "),a("th",[e._v("Path")]),e._v(" "),a("th",[e._v("in")]),e._v(" "),a("th",[e._v("name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("GET")]),e._v(" "),a("td",[e._v("/token/{id}")]),e._v(" "),a("td",[e._v("path")]),e._v(" "),a("td",[e._v("id")])])])]),e._v(" "),a("p",[a("em",[e._v("Example: Create a token")])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("POST /token")]),e._v(" operation accepts three parameters. The name and description of the token are placed in the type "),a("code",[e._v("query")]),e._v(" and will be moved by Airnode to the requestBody upon calling the API operation. The third is a "),a("code",[e._v("header")]),e._v(" parameter that describes the Content-Type of the request such as "),a("code",[e._v("application/json")]),e._v(" or "),a("code",[e._v("application/x-www-form-urlencoded")]),e._v(".")]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Method")]),e._v(" "),a("th",[e._v("Path")]),e._v(" "),a("th",[e._v("in")]),e._v(" "),a("th",[e._v("name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("POST")]),e._v(" "),a("td",[e._v("/token")]),e._v(" "),a("td",[e._v("query")]),e._v(" "),a("td",[e._v("name")])]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td"),e._v(" "),a("td",[e._v("query")]),e._v(" "),a("td",[e._v("description")])]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td"),e._v(" "),a("td",[e._v("header")]),e._v(" "),a("td",[e._v("Accept")])])])]),e._v(" "),a("p",[a("em",[e._v("Example: Get all tokens")])]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("GET /tokens")]),e._v(" returns a list of all tokens. The list count can be limited using the `limit' parameter which the API operation considers as optional since it will not return an error if omitted.")]),e._v(" "),a("blockquote",[a("p",[a("code",[e._v("GET /tokens")]),e._v(" returns all tokens.")]),e._v(" "),a("p",[a("code",[e._v("GET /tokens?limit=10")]),e._v(" returns the first ten tokens.")])]),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("Method")]),e._v(" "),a("th",[e._v("Path")]),e._v(" "),a("th",[e._v("in")]),e._v(" "),a("th",[e._v("name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("GET")]),e._v(" "),a("td",[e._v("/tokens")]),e._v(" "),a("td",[e._v("query")]),e._v(" "),a("td",[e._v("limit")])])])]),e._v(" "),a("h3",{attrs:{id:"security-schemes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#security-schemes"}},[e._v("#")]),e._v(" Security schemes")]),e._v(" "),a("p",[e._v("OIS security mostly follows OAS security practices. There are some differences noted below. For more about OAS security see "),a("a",{attrs:{href:"https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.3.md#securitySchemeObject",target:"_blank",rel:"noopener noreferrer"}},[e._v("OAS 3.0.3 docs"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("ul",[a("li",[e._v("All API operations for each OIS object must use the securityScheme(s) named the "),a("code",[e._v("ois.apiSpecifications.security")]),e._v(" field.")]),e._v(" "),a("li",[e._v("Only "),a("code",[e._v("apiKey")]),e._v(" and "),a("code",[e._v("http")]),e._v(" security types are supported.")])]),e._v(" "),a("h4",{attrs:{id:"how-to-secure-an-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#how-to-secure-an-api"}},[e._v("#")]),e._v(" How to secure an API")]),e._v(" "),a("p",[e._v("Security is implemented using the securitySchemes and security fields. You use "),a("code",[e._v("components.securitySchemes")]),e._v(" to define the securitySchemes your API will use, then use "),a("code",[e._v("security")]),e._v(" to apply the securitySchemes to all API operations in the "),a("code",[e._v("ois")]),e._v(" object. Consider the following code that declares a securityScheme that requires an API Key that must exist in the HTTP header named X-api-key.")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"components"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"myApiKeyScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Declares the security scheme myApiKeyScheme (arbitrary name).")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"header"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('// "query", "header", "cookie"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v('// "apiKey", "http"')]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-api-key"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Arbitrary name")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"security"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"myApiKeyScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// Applies the security scheme myApiKeyScheme ")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// globally to all API operations in the ois object.")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br")])]),a("p",[e._v("You can create a securityScheme by copying the code above or using the template code below. Just follow the steps below. Or use the full "),a("RouterLink",{attrs:{to:"/next/technology/templates/ois-json.html"}},[e._v("OIS Template")]),e._v(".")],1),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"components"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"{FILL_SECURITY_SCHEME_NAME}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{FILL_*}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{FILL_*}"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"{FILL_*}"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"security"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"{FILL_SECURITY_SCHEME_NAME}"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br")])]),a("ol",[a("li",[a("p",[e._v("First, name the security scheme by replacing "),a("code",[e._v("{FILL_SECURITY_SCHEME_NAME}")]),e._v(" under "),a("code",[e._v("apiSpecifications.components.securitySchemes")]),e._v(". Note that you will also need to use the same name under "),a("code",[e._v("apiSpecifications.security")]),e._v(". Make sure to choose a descriptive name, such as "),a("code",[e._v("myApiKeyScheme")]),e._v(". This name will also be referred in the "),a("RouterLink",{attrs:{to:"/next/technology/deployment-files/secrets-env.html"}},[e._v("secrets.env")]),e._v(" file in a later step.")],1),e._v(" "),a("blockquote",[a("p",[e._v("Note that we will not be entering the API key itself in the OIS, because the OIS is not meant to include any user-specific information. Security credentials such as API keys go in "),a("RouterLink",{attrs:{to:"/next/technology/deployment-files/secrets-env.html"}},[e._v("secrets.env")]),e._v(" file.")],1)])]),e._v(" "),a("li",[a("p",[e._v("Enter values for "),a("code",[e._v("in")]),e._v(", "),a("code",[e._v("type")]),e._v(" and "),a("code",[e._v("name")]),e._v(". You can refer to the "),a("RouterLink",{attrs:{to:"/next/technology/specifications/ois.html#_4-2-components"}},[e._v("OIS")]),e._v(" document for more details or reference the following table for acceptable values.")],1),e._v(" "),a("table",[a("thead",[a("tr",[a("th",[e._v("type")]),e._v(" "),a("th",[e._v("in")]),e._v(" "),a("th",[e._v("name")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("apiKey")]),e._v(" "),a("td",[e._v("header")]),e._v(" "),a("td",[e._v("{myName}, Arbitrary parameter name")])]),e._v(" "),a("tr",[a("td",[e._v("http")]),e._v(" "),a("td",[e._v("query")]),e._v(" "),a("td")]),e._v(" "),a("tr",[a("td"),e._v(" "),a("td",[e._v("cookie")]),e._v(" "),a("td")])])])]),e._v(" "),a("li",[a("p",[e._v("Make sure to insert the name of your securityScheme under "),a("code",[e._v("security")]),e._v(".")])]),e._v(" "),a("li",[a("p",[e._v("Security credentials such as API keys go in "),a("RouterLink",{attrs:{to:"/next/technology/deployment-files/secrets-env.html"}},[e._v("secrets.env")]),e._v(" file. This step will actually be discussed in the next Guide document "),a("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/configuring-airnode.html#creating-secrets-env"}},[e._v("Configuring Airnode")]),e._v(" which will discuss how to link your securityScheme(s) to the secrets.env file via the environment field. For now the following shows what the type "),a("code",[e._v("apiKey")]),e._v(" named "),a("code",[e._v("myApiKeyScheme")]),e._v(" might look like in secrets.env.")],1),e._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("MASTER_KEY_MNEMONIC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_ACCESS_KEY_ID")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("AWS_SECRET_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("CP_EVM_31337_EVM_LOCAL")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("SS_MY_API_KEY")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"XP9876BH768FGD6734"')]),e._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# The apiKey")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])])])]),e._v(" "),a("h4",{attrs:{id:"multiple-securityschemes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-securityschemes"}},[e._v("#")]),e._v(" Multiple securitySchemes")]),e._v(" "),a("p",[e._v("You can use multiple security schemes (e.g., an API key goes in the header, and an additional secret goes in the query).")]),e._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"components"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"securitySchemes"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"myApiKeyScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"header"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" \n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"X-api-key"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"mySecretScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"in"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"query"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"apiKey"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"secret"')]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"security"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"myApiKeyScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[e._v('"mySecretScheme"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("]")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br"),a("span",{staticClass:"line-number"},[e._v("14")]),a("br"),a("span",{staticClass:"line-number"},[e._v("15")]),a("br"),a("span",{staticClass:"line-number"},[e._v("16")]),a("br"),a("span",{staticClass:"line-number"},[e._v("17")]),a("br"),a("span",{staticClass:"line-number"},[e._v("18")]),a("br"),a("span",{staticClass:"line-number"},[e._v("19")]),a("br"),a("span",{staticClass:"line-number"},[e._v("20")]),a("br")])]),a("h4",{attrs:{id:"api-operations-needing-different-securityschemes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-operations-needing-different-securityschemes"}},[e._v("#")]),e._v(" API Operations needing different securitySchemes")]),e._v(" "),a("p",[e._v("If different API operations use different securitySchemes (or some use none) they must be grouped in different "),a("code",[e._v("ois")]),e._v(" objects based on their common securityScheme(s). For example: Your API has four operations, three require an apiKey in the HTTP header, another (/ping) requires no security.")]),e._v(" "),a("ul",[a("li",[e._v("The first three API operations might be in the "),a("code",[e._v("ois[0]")]),e._v(" object with a securityScheme named "),a("em",[e._v("myApiKeyScheme")]),e._v(" of type "),a("em",[e._v("apiKey")]),e._v(" as shown above.")]),e._v(" "),a("li",[e._v("The /ping API operation would be in "),a("code",[e._v("ois[1]")]),e._v(" which would not have any "),a("code",[e._v("component.securitySchemes")]),e._v(" and "),a("code",[e._v("security")]),e._v(" would be an empty array.")])]),e._v(" "),a("h4",{attrs:{id:"no-security"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#no-security"}},[e._v("#")]),e._v(" No Security")]),e._v(" "),a("p",[e._v("If the API you are integrating is publicly accessible, you can remove all security schemes.")]),e._v(" "),a("h2",{attrs:{id:"step-3-specifying-airnode-endpoints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#step-3-specifying-airnode-endpoints"}},[e._v("#")]),e._v(" Step 3: Specifying Airnode Endpoints")]),e._v(" "),a("p",[e._v("An Airnode endpoint is a service that Airnode exposes to on-chain clients. It maps to an API operation, but the nature of this mapping is customizable. It is the integrator's job to define what this service is.")]),e._v(" "),a("p",[e._v("For example, if your API operation returns an asset price given its ticker (e.g., "),a("code",[e._v("BTC")]),e._v("), you can specify the endpoint such that the requester provides the ticker as a parameter. The resulting endpoint would be a general one that returns prices for any kind of asset. On the other hand, you can hardcode "),a("code",[e._v("BTC")]),e._v(" as the asset whose price will be returned (using "),a("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/api-integration.html#fixedoperationparameters"}},[e._v("fixed operation parameters")]),e._v("), which would make your endpoint a specific one that only returns the BTC price.")],1),e._v(" "),a("p",[e._v("The recommended endpoint definition pattern is to create an Airnode endpoint for each API operation, and allow the requesters to provide all operation parameters themselves. This results in optimal flexibility, and essentially allows the requesters to use the entire API functionality on-chain. Normally, oracle integrations strive to hard-code as many API parameters as possible because passing these parameters on-chain results in a gas cost overhead. However, the Airnode protocol uses "),a("RouterLink",{attrs:{to:"/next/technology/protocols/request-response/template.html"}},[e._v("templates")]),e._v(" (not to be confused with the OIS template we are using for this guide), which allow requesters to specify a large number of endpoint parameters at no additional gas cost.")],1),e._v(" "),a("p",[e._v("Note that there are some cases where you may not want to map endpoints to API operations one-to-one. For example, an API operation can have a "),a("code",[e._v("header")]),e._v(" parameter, "),a("code",[e._v("Accept")]),e._v(", that can take the values "),a("code",[e._v("application/json")]),e._v(" or "),a("code",[e._v("applicatino/xml")]),e._v(" to determine how to  format the data that the API will respond to the call.\nAirnode expects responses to be in JSON format, and thus hard-coding this parameter as "),a("code",[e._v("JSON")]),e._v(" would be more suitable than letting the requester decide, as there is only one valid choice.\nAgain, the integrator's job is to be aware of these subtleties and use judgement.")]),e._v(" "),a("p",[e._v("After this brief detour, let us get back to filling in our OIS template.")]),e._v(" "),a("h3",{attrs:{id:"endpoints"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#endpoints"}},[e._v("#")]),e._v(" Endpoints")]),e._v(" "),a("p",[e._v("The field "),a("code",[e._v("endpoints")]),e._v(" is a array, with each row representing an Airnode endpoint. The first field you need to fill in is "),a("code",[e._v("name")]),e._v(". Make sure that it is descriptive and unique from other endpoint names. If you are integrating API operations to Airnode endpoints one-to-one, using the API operation path as the endpoint name is a decent choice (i.e., "),a("code",[e._v("/token")]),e._v("). Note that you would also add the method to this name if there were multiple operations with different methods for a single path (i.e., "),a("code",[e._v("GET/token")]),e._v(").")]),e._v(" "),a("p",[e._v("The next step is to fill in "),a("code",[e._v("operation")]),e._v(" object. Here, you need to enter the "),a("code",[e._v("path")]),e._v(" and "),a("code",[e._v("method")]),e._v(" of an API operation you have defined in "),a("code",[e._v("apiSpecifications.paths")]),e._v(", resulting in the Airnode endpoint calling the now linked API operation.")]),e._v(" "),a("h4",{attrs:{id:"fixedoperationparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fixedoperationparameters"}},[e._v("#")]),e._v(" fixedOperationParameters")]),e._v(" "),a("p",[e._v("It is not uncommon to hard-code API parameters (recall the "),a("code",[e._v("Accept")]),e._v(" operation parameter in the above example). Such hard-coded parameters are called "),a("code",[e._v("fixedOperationParameters")]),e._v(".")]),e._v(" "),a("p",[e._v("In the OIS template there is a fixed operation parameter under "),a("code",[e._v("endpoints.*.fixedOperationParameters")]),e._v(", and it refers to the first API operation parameter. This means that whenever the Airnode receives a request for this endpoint, the respective API call will be made with that API operation parameter set to "),a("code",[e._v("endpoints.*.fixedOperationParameters.*.value")]),e._v(". The requester does not supply a value for "),a("code",[e._v("fixedOperationParameters")]),e._v(".")]),e._v(" "),a("p",[e._v("An Airnode endpoint can have multiple "),a("code",[e._v("fixedOperationParameters")]),e._v(". An API operation parameter cannot be in both "),a("code",[e._v("endpoints.*.fixedOperationParameters")]),e._v(" and "),a("code",[e._v("endpoints.*.parameters")]),e._v(".")]),e._v(" "),a("h4",{attrs:{id:"reservedparameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#reservedparameters"}},[e._v("#")]),e._v(" reservedParameters")]),e._v(" "),a("Todo",[a("p",[e._v("The explanation of reservedParameters needs work. It jumps the user around. At least explain what they are in detail before making the jumps.")])]),e._v(" "),a("p",[e._v('The requester can provide some parameters that are not mapped to API operation parameters.\nThese parameters are called "reserved parameters", and their names start with an underscore.\nSee the '),a("RouterLink",{attrs:{to:"/next/technology/specifications/ois.html#_5-4-reservedparameters"}},[e._v("related OIS docs")]),e._v(" for more information.")],1),e._v(" "),a("p",[e._v("The current list of reserved parameters are "),a("code",[e._v("_type")]),e._v(", "),a("code",[e._v("_path")]),e._v(", "),a("code",[e._v("_times")]),e._v(" and "),a("code",[e._v("_relay_metadata")]),e._v(".\nSee the "),a("RouterLink",{attrs:{to:"/next/technology/specifications/reserved-parameters.html"}},[e._v("reserved parameters guide")]),e._v(" to see what each of these parameters are for.\nIn most cases, all three should be defined as reserved parameters with no fixed/default values, as doing so provides the requester with the most flexibility.")],1),e._v(" "),a("h4",{attrs:{id:"parameters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#parameters"}},[e._v("#")]),e._v(" parameters")]),e._v(" "),a("p",[e._v("Airnode endpoint parameters map to API operation parameters that the requester is allowed to provide values for. It refers to an API operation through its field "),a("code",[e._v("operationParameter")]),e._v(". You can also provide "),a("code",[e._v("default")]),e._v(" values for endpoint parameters, though this is not recommended in most cases.")]),e._v(" "),a("p",[e._v("Endpoint parameters have a "),a("code",[e._v("name")]),e._v(" field, which does not have to be the same as the API operation parameter that they map to. As a separate note, an Airnode endpoint can have multiple parameters.")]),e._v(" "),a("h2",{attrs:{id:"conclusion"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conclusion"}},[e._v("#")]),e._v(" Conclusion")]),e._v(" "),a("p",[e._v("This was all!\nWe specified the API operations and Airnode endpoints. Each Airnode endpoint maps to an API operation, and each Airnode endpoint parameter or fixedOperationParameter maps to an API operation parameter. The resulting OIS includes no user-specific information, which means that you can share it for others to easily provide the same services (for example, to set up a third-party oracle network).")]),e._v(" "),a("p",[e._v("Note that there was some subjectivity while defining the Airnode endpoints. This means that two different OISes can exist for the same exact API, differing based on how the integrators designed the interface that the requester will use. However, in most cases, one would simply map API operations to Airnode endpoints directly, and let the requester provide all API operation parameters through the Airnode endpoint parameters.")]),e._v(" "),a("p",[e._v("Currently there is no tool that generates an "),a("code",[e._v("endpoints")]),e._v(" list that maps to "),a("code",[e._v("apiSpecifications.paths")]),e._v(" one-to-one. If you would like to help build this, please join the conversation in "),a("a",{attrs:{href:"https://github.com/api3dao/airnode/issues/153",target:"_blank",rel:"noopener noreferrer"}},[e._v("this issue"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("Now that we have our OIS object, the next step is "),a("RouterLink",{attrs:{to:"/next/grp-providers/guides/provider/configuring-airnode.html"}},[e._v("Configuring Airnode")]),e._v(".")],1)],1)}),[],!1,null,null,null);t.default=n.exports}}]);